%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Malyadri Venkata Sampath Naveen Padmanabhuni
%%Title: Window .printEngine1.page.layout
%%CreationDate: Wed Dec  1 02:20:50 2021
%%BoundingBox: 0 0 613 793
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog

%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 0.0 translate
90 rotate
0.6 0.6 scale
0 -1020 translate
0 1020 moveto 1320 1020 lineto 1320 0 lineto 0 0 lineto closepath clip newpath
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1260 960 [
[(Page 1 of 1)]
] 16 -1 0 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1260 59.9999999999999 [
[(Printed by SimVision from Cadence Design Systems, Inc.)]
] 16 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 59.9999999999999 [
[(Printed on Wed Dec 01 02:20:48 EST 2021)]
] 16 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 960 [
[(padmanabhuni - U88648766 || USF EE)]
] 28 -0 0 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 932 [
[(ALU - Arithmetic and Logic Unit designed as part of the Paplinski's "WORD SERIAL MULTIPLIER")]
] 16 -0 0 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 916 [
[(The function of the ALU is to perform operations like addition and subraction, The F - output from the ALU is loaded into the A-register through arithmetic shift right operation)]
] 16 -0 0 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 900 [
[(Least significant bit f0 is shifted into the Q register, The inputs to the ALU A and B are taken from the D register and A register respectively, again the output from the ALU with F = F/2 is performed and fed into the A register.)]
] 16 -0 0 0 false DrawText
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
204 828 [
[(Cursor-Baseline = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
204 828 [
[(60ns)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
204 845 [
[(Baseline = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
204 845 [
[(0)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
204 862 [
[(Cursor = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
204 862 [
[(60ns)]
] 11 -0 1 0 false DrawText
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
60 685 translate
1.66667 1.64706 scale
0 -56 translate
0 56 105 141 SetClipRegion
%% including "/tmp/tmp1sl175141.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.slist
%%CreationDate: Wed Dec  1 02:20:50 2021
%%BoundingBox: 0 56 105 141
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 140.0 translate
0.5998 0.5998 scale
0 -140 translate
0 140 moveto 175 140 lineto 175 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 140 moveto
175 140 lineto
175 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 140 moveto
174 140 lineto
174 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 139 moveto
173 139 lineto
173 123 lineto
1 123 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 123 moveto
173 123 lineto
173 107 lineto
1 107 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 107 moveto
173 107 lineto
173 91 lineto
1 91 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 91 moveto
173 91 lineto
173 75 lineto
1 75 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 75 moveto
173 75 lineto
173 57 lineto
1 57 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 57 moveto
173 57 lineto
173 41 lineto
1 41 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 41 moveto
173 41 lineto
173 25 lineto
1 25 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 25 moveto
173 25 lineto
173 9 lineto
1 9 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 9 moveto
173 9 lineto
173 -7 lineto
1 -7 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 130 moveto
10 0 lineto
stroke
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 130 moveto
26 130 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 134 moveto
13 134 lineto
13 126 lineto
6 126 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 134 moveto
14 134 lineto
14 126 lineto
6 126 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 130 moveto
12 130 lineto
stroke
10 132 moveto
10 128 lineto
stroke
grestore
gsave
22 123 translate
/TkPhoto { 
  gsave 
  32 dict begin 
  /tinteger exch def 
  /transparent 1 string def 
  transparent 0 tinteger put 
  /olddict exch def 
  olddict /DataSource get dup type /filetype ne { 
    olddict /DataSource 3 -1 roll 
    0 () /SubFileDecode filter put 
  } { 
    pop 
  } ifelse 
  /newdict olddict maxlength dict def 
  olddict newdict copy pop 
  /w newdict /Width get def 
  /crpp newdict /Decode get length 2 idiv def 
  /str w string def 
  /pix w crpp mul string def 
  /substrlen 2 w log 2 log div floor exp cvi def 
  /substrs [ 
  { 
     substrlen string 
     0 1 substrlen 1 sub { 
       1 index exch tinteger put 
     } for 
     /substrlen substrlen 2 idiv def 
     substrlen 0 eq {exit} if 
  } loop 
  ] def 
  /h newdict /Height get def 
  1 w div 1 h div matrix scale 
  olddict /ImageMatrix get exch matrix concatmatrix 
  matrix invertmatrix concat 
  newdict /Height 1 put 
  newdict /DataSource pix put 
  /mat [w 0 0 h 0 0] def 
  newdict /ImageMatrix mat put 
  0 1 h 1 sub { 
    mat 5 3 -1 roll neg put 
    olddict /DataSource get str readstring pop pop 
    /tail str def 
    /x 0 def 
    olddict /DataSource get pix readstring pop pop 
    { 
      tail transparent search dup /done exch not def 
      {exch pop exch pop} if 
      /w1 exch length def 
      w1 0 ne { 
        newdict /DataSource  pix x crpp mul w1 crpp mul getinterval put 
        newdict /Width w1 put 
        mat 4 x neg put 
        /x x w1 add def 
        newdict image 
        /tail tail w1 tail length w1 sub getinterval def 
      } if 
      done {exit} if 
      tail substrs { 
        anchorsearch {pop} if 
      } forall 
      /tail exch def 
      tail length 0 eq {exit} if 
      /x w tail length sub def 
    } loop 
  } for 
  end 
  grestore 
} bind def 


/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 126 [
[(A_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 114 moveto
26 114 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 118 moveto
13 118 lineto
13 110 lineto
6 110 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 118 moveto
14 118 lineto
14 110 lineto
6 110 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 114 moveto
12 114 lineto
stroke
10 116 moveto
10 112 lineto
stroke
grestore
gsave
22 107 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 110 [
[(B_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 98 moveto
26 98 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 102 moveto
13 102 lineto
13 94 lineto
6 94 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 102 moveto
14 102 lineto
14 94 lineto
6 94 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 98 moveto
12 98 lineto
stroke
10 100 moveto
10 96 lineto
stroke
grestore
gsave
22 91 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 94 [
[(op_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 82 moveto
26 82 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 86 moveto
13 86 lineto
13 78 lineto
6 78 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 86 moveto
14 86 lineto
14 78 lineto
6 78 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 82 moveto
12 82 lineto
stroke
10 84 moveto
10 80 lineto
stroke
grestore
gsave
22 75 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 78 [
[(F_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 70 moveto
173 70 lineto
173 65 lineto
2 65 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 48 moveto
26 48 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 52 moveto
13 52 lineto
13 44 lineto
6 44 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 52 moveto
14 52 lineto
14 44 lineto
6 44 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 48 moveto
12 48 lineto
stroke
10 50 moveto
10 46 lineto
stroke
grestore
gsave
22 41 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 44 [
[(A_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 32 moveto
26 32 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 36 moveto
13 36 lineto
13 28 lineto
6 28 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 36 moveto
14 36 lineto
14 28 lineto
6 28 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 32 moveto
12 32 lineto
stroke
10 34 moveto
10 30 lineto
stroke
grestore
gsave
22 25 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 28 [
[(B_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 16 moveto
26 16 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 20 moveto
13 20 lineto
13 12 lineto
6 12 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 20 moveto
14 20 lineto
14 12 lineto
6 12 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 16 moveto
12 16 lineto
stroke
10 18 moveto
10 14 lineto
stroke
grestore
gsave
22 9 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 12 [
[(op_tb)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 0 moveto
26 0 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 4 moveto
13 4 lineto
13 -4 lineto
6 -4 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 4 moveto
14 4 lineto
14 -4 lineto
6 -4 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 0 moveto
12 0 lineto
stroke
10 2 moveto
10 -2 lineto
stroke
grestore
gsave
22 -7 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 -4 [
[(F_tb)]
] 9 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
234 685 translate
1.6383 1.64706 scale
0 -56 translate
0 56 47 141 SetClipRegion
%% including "/tmp/tmp1sd175141.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sdata
%%CreationDate: Wed Dec  1 02:20:50 2021
%%BoundingBox: 0 56 47 141
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 140.0 translate
0.5998 0.5998 scale
0 -140 translate
0 140 moveto 77 140 lineto 77 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 140 moveto
77 140 lineto
77 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 140 moveto
76 140 lineto
76 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 139 moveto
75 139 lineto
75 123 lineto
1 123 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 127 [
[('h10001101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 123 moveto
75 123 lineto
75 107 lineto
1 107 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 111 [
[('h10000101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 107 moveto
75 107 lineto
75 91 lineto
1 91 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 95 [
[('h1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 91 moveto
75 91 lineto
75 75 lineto
1 75 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 79 [
[('h20001202)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 75 moveto
75 75 lineto
75 57 lineto
1 57 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 70 moveto
74 70 lineto
74 65 lineto
2 65 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 57 moveto
75 57 lineto
75 41 lineto
1 41 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 45 [
[('d268439809)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 41 moveto
75 41 lineto
75 25 lineto
1 25 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 29 [
[('d268435713)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 25 moveto
75 25 lineto
75 9 lineto
1 9 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 13 [
[('d1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 9 moveto
75 9 lineto
75 -7 lineto
1 -7 lineto
closepath
fill
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 -3 [
[('d536875522)]
] 9 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
310 685 translate
1.66725 1.64706 scale
0 -56 translate
0 56 571 141 SetClipRegion
%% including "/tmp/tmp1sb175141.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sbox
%%CreationDate: Wed Dec  1 02:20:50 2021
%%BoundingBox: 0 56 571 141
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 140.0 translate
0.5998 0.5998 scale
0 -140 translate
0 140 moveto 952 140 lineto 952 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 140 moveto
952 140 lineto
952 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 140 moveto
951 140 lineto
951 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 139 moveto
949 139 lineto
949 123 lineto
2 123 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 123 moveto
949 123 lineto
949 107 lineto
2 107 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 107 moveto
949 107 lineto
949 91 lineto
2 91 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 91 moveto
949 91 lineto
949 75 lineto
2 75 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 75 moveto
949 75 lineto
949 57 lineto
2 57 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 57 moveto
949 57 lineto
949 41 lineto
2 41 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 41 moveto
949 41 lineto
949 25 lineto
2 25 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 25 moveto
949 25 lineto
949 9 lineto
2 9 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 9 moveto
949 9 lineto
949 -7 lineto
2 -7 lineto
closepath
fill
grestore
gsave
1.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 140 moveto
2 0 lineto
stroke
grestore
gsave
1.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
949 140 moveto
949 0 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 131 moveto
4 137 lineto
126 137 lineto
128 131 lineto
126 125 lineto
4 125 lineto
2 131 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 127 [
[(00000000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 131 moveto
130 137 lineto
189 137 lineto
191 131 lineto
189 125 lineto
130 125 lineto
128 131 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 127 [
[(11111111)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 131 moveto
193 137 lineto
395 137 lineto
397 131 lineto
395 125 lineto
193 125 lineto
191 131 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 127 [
[(01000101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 131 moveto
399 137 lineto
537 137 lineto
539 131 lineto
537 125 lineto
399 125 lineto
397 131 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 127 [
[(11100101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 131 moveto
541 137 lineto
710 137 lineto
712 131 lineto
710 125 lineto
541 125 lineto
539 131 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 127 [
[(01100111)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 131 moveto
714 137 lineto
947 137 lineto
949 131 lineto
947 125 lineto
714 125 lineto
712 131 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 127 [
[(10001101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 115 moveto
4 121 lineto
126 121 lineto
128 115 lineto
126 109 lineto
4 109 lineto
2 115 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 111 [
[(00000000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 115 moveto
130 121 lineto
189 121 lineto
191 115 lineto
189 109 lineto
130 109 lineto
128 115 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 111 [
[(11110111)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 115 moveto
193 121 lineto
395 121 lineto
397 115 lineto
395 109 lineto
193 109 lineto
191 115 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 111 [
[(11100001)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 115 moveto
399 121 lineto
537 121 lineto
539 115 lineto
537 109 lineto
399 109 lineto
397 115 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 111 [
[(01000001)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 115 moveto
541 121 lineto
710 121 lineto
712 115 lineto
710 109 lineto
541 109 lineto
539 115 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 111 [
[(01100011)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 115 moveto
714 121 lineto
947 121 lineto
949 115 lineto
947 109 lineto
714 109 lineto
712 115 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 111 [
[(10000101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 99 moveto
4 105 lineto
126 105 lineto
128 99 lineto
126 93 lineto
4 93 lineto
2 99 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 95 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 99 moveto
130 105 lineto
189 105 lineto
191 99 lineto
189 93 lineto
130 93 lineto
128 99 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 95 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 99 moveto
193 105 lineto
395 105 lineto
397 99 lineto
395 93 lineto
193 93 lineto
191 99 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 95 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 99 moveto
399 105 lineto
537 105 lineto
539 99 lineto
537 93 lineto
399 93 lineto
397 99 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 95 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 99 moveto
541 105 lineto
710 105 lineto
712 99 lineto
710 93 lineto
541 93 lineto
539 99 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 95 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 99 moveto
714 105 lineto
947 105 lineto
949 99 lineto
947 93 lineto
714 93 lineto
712 99 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 95 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 83 moveto
4 89 lineto
126 89 lineto
128 83 lineto
126 77 lineto
4 77 lineto
2 83 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 79 [
[(00000000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 83 moveto
130 89 lineto
189 89 lineto
191 83 lineto
189 77 lineto
130 77 lineto
128 83 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 79 [
[(11111111)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 83 moveto
193 89 lineto
395 89 lineto
397 83 lineto
395 77 lineto
193 77 lineto
191 83 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 79 [
[(12100102)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 83 moveto
399 89 lineto
537 89 lineto
539 83 lineto
537 77 lineto
399 77 lineto
397 83 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 79 [
[(10100100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 83 moveto
541 89 lineto
710 89 lineto
712 83 lineto
710 77 lineto
541 77 lineto
539 83 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 79 [
[(01100111)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 83 moveto
714 89 lineto
947 89 lineto
949 83 lineto
947 77 lineto
714 77 lineto
712 83 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 79 [
[(20001202)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
3 70 moveto
948 70 lineto
948 65 lineto
3 65 lineto
closepath
fill
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 49 moveto
4 55 lineto
126 55 lineto
128 49 lineto
126 43 lineto
4 43 lineto
2 49 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 45 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 49 moveto
130 55 lineto
189 55 lineto
191 49 lineto
189 43 lineto
130 43 lineto
128 49 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
176 45 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 45 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
140 45 [
[(8)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
146 45 [
[(6)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
152 45 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
158 45 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
164 45 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
170 45 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 49 moveto
193 55 lineto
395 55 lineto
397 49 lineto
395 43 lineto
193 43 lineto
191 49 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 45 [
[(16777473)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 49 moveto
399 55 lineto
537 55 lineto
539 49 lineto
537 43 lineto
399 43 lineto
397 49 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 45 [
[(286261505)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 49 moveto
541 55 lineto
710 55 lineto
712 49 lineto
710 43 lineto
541 43 lineto
539 49 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 45 [
[(17826065)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 49 moveto
714 55 lineto
947 55 lineto
949 49 lineto
947 43 lineto
714 43 lineto
712 49 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 45 [
[(268439809)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 33 moveto
4 39 lineto
126 39 lineto
128 33 lineto
126 27 lineto
4 27 lineto
2 33 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 29 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 33 moveto
130 39 lineto
189 39 lineto
191 33 lineto
189 27 lineto
130 27 lineto
128 33 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
176 29 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 29 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
140 29 [
[(8)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
146 29 [
[(6)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
152 29 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
158 29 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
164 29 [
[(7)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
170 29 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 33 moveto
193 39 lineto
395 39 lineto
397 33 lineto
395 27 lineto
193 27 lineto
191 33 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 29 [
[(286261249)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 33 moveto
399 39 lineto
537 39 lineto
539 33 lineto
537 27 lineto
399 27 lineto
397 33 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 29 [
[(16777217)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 33 moveto
541 39 lineto
710 39 lineto
712 33 lineto
710 27 lineto
541 27 lineto
539 33 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 29 [
[(17825809)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 33 moveto
714 39 lineto
947 39 lineto
949 33 lineto
947 27 lineto
714 27 lineto
712 33 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 29 [
[(268435713)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 17 moveto
4 23 lineto
126 23 lineto
128 17 lineto
126 11 lineto
4 11 lineto
2 17 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 13 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 17 moveto
130 23 lineto
189 23 lineto
191 17 lineto
189 11 lineto
130 11 lineto
128 17 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 13 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 17 moveto
193 23 lineto
395 23 lineto
397 17 lineto
395 11 lineto
193 11 lineto
191 17 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 13 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 17 moveto
399 23 lineto
537 23 lineto
539 17 lineto
537 11 lineto
399 11 lineto
397 17 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 13 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 17 moveto
541 23 lineto
710 23 lineto
712 17 lineto
710 11 lineto
541 11 lineto
539 17 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 13 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 17 moveto
714 23 lineto
947 23 lineto
949 17 lineto
947 11 lineto
714 11 lineto
712 17 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 13 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
4 7 lineto
126 7 lineto
128 1 lineto
126 -5 lineto
4 -5 lineto
2 1 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 -3 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 1 moveto
130 7 lineto
189 7 lineto
191 1 lineto
189 -5 lineto
130 -5 lineto
128 1 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
176 -3 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
134 -3 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
140 -3 [
[(8)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
146 -3 [
[(6)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
152 -3 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
158 -3 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
164 -3 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
170 -3 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 1 moveto
193 7 lineto
395 7 lineto
397 1 lineto
395 -5 lineto
193 -5 lineto
191 1 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
197 -3 [
[(303038722)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
397 1 moveto
399 7 lineto
537 7 lineto
539 1 lineto
537 -5 lineto
399 -5 lineto
397 1 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
403 -3 [
[(269484288)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 1 moveto
541 7 lineto
710 7 lineto
712 1 lineto
710 -5 lineto
541 -5 lineto
539 1 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
545 -3 [
[(17826065)]
] 9 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
712 1 moveto
714 7 lineto
947 7 lineto
949 1 lineto
947 -5 lineto
714 -5 lineto
712 1 lineto
stroke
grestore
gsave
/Gothic findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
718 -3 [
[(536875522)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0 140 moveto
952 140 lineto
952 0 lineto
0 0 lineto
closepath
clip
newpath
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
310 825 translate
1.66725 1.59459 scale
0 -23 translate
0 23 571 60 SetClipRegion
%% including "/tmp/tmp1mx175141.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.maxis
%%CreationDate: Wed Dec  1 02:20:50 2021
%%BoundingBox: 0 23 571 60
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 59.0 translate
0.5998 0.5998 scale
0 -59 translate
0 59 moveto 952 59 lineto 952 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 59 moveto
952 59 lineto
952 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 58 moveto
950 58 lineto
950 1 lineto
1 1 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
2 16 lineto
stroke
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
34 1 moveto
34 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
65 1 moveto
65 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
97 1 moveto
97 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 1 moveto
128 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
160 1 moveto
160 16 lineto
stroke
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
162 6 [
[(10ns)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
191 1 moveto
191 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
223 1 moveto
223 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
255 1 moveto
255 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
286 1 moveto
286 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
318 1 moveto
318 16 lineto
stroke
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
320 6 [
[(20ns)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
349 1 moveto
349 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
381 1 moveto
381 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 1 moveto
412 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
444 1 moveto
444 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
475 1 moveto
475 16 lineto
stroke
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
477 6 [
[(30ns)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
507 1 moveto
507 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 1 moveto
539 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
570 1 moveto
570 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
602 1 moveto
602 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
633 1 moveto
633 16 lineto
stroke
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
635 6 [
[(40ns)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
665 1 moveto
665 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
696 1 moveto
696 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
728 1 moveto
728 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
760 1 moveto
760 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
791 1 moveto
791 16 lineto
stroke
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
793 6 [
[(50ns)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
823 1 moveto
823 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
854 1 moveto
854 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
886 1 moveto
886 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
917 1 moveto
917 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
949 1 moveto
949 16 lineto
stroke
grestore
gsave
1.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 44 moveto
2 1 lineto
stroke
grestore
gsave
1.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 44 moveto
2 30 lineto
92 30 lineto
92 44 lineto
2 44 lineto
closepath
fill
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
5 32 [
[(Baseline = 0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
1.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
949 30 moveto
949 1 lineto
stroke
grestore
gsave
1.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
950 30 moveto
860 30 lineto
860 16 lineto
950 16 lineto
950 30 lineto
closepath
fill
grestore
gsave
/Gothic findfont 7 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
862 18 [
[(TimeA = 60ns)]
] 11 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
restore showpage

%%Trailer
end
%%EOF

